{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","style","color","Statistics","good","neutral","bad","total","positivePercentage","className","s","FeedbackContainerLabels","FeedbackLabelGood","FeedbackLabelNeutral","FeedbackLabelBad","CountContainerLabels","CountTotalFeedback","CountPositiveFeedbackPercentage","FeedbackOptions","options","onLeaveFeedback","FeedbackContainerButtons","map","option","FeedbackButton","onClick","Notification","message","fontWeight","App","state","counterFeedback","feedback","setState","prevState","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","totalFeedback","this","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAgBeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACG,qBAAIC,MAAO,CAAEC,MAAO,UAApB,cAAkCH,KAClCC,M,gBC8BQG,EAjCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,4CACA,gCACE,qBAAIC,UAAWC,IAAEC,wBAAjB,UACE,qBAAIF,UAAWC,IAAEE,kBAAmBX,MAAO,CAAEC,MAAO,SAApD,mBACSE,KAET,qBAAIK,UAAWC,IAAEG,qBAAsBZ,MAAO,CAAEC,MAAO,UAAvD,sBACYG,KAEZ,qBAAII,UAAWC,IAAEI,iBAAkBb,MAAO,CAAEC,MAAO,OAAnD,kBACQI,QAGV,qBAAIG,UAAWC,IAAEK,qBAAjB,UACE,qBAAIN,UAAWC,IAAEM,mBAAjB,oBAA6CT,KAC7C,qBAAIE,UAAWC,IAAEO,gCAAjB,gCACsBT,EADtB,kB,gBCEOU,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIX,UAAWC,IAAEW,yBAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAEEd,UAAWC,IAAEc,eACbC,QAAS,kBAAML,EAAgBG,IAHjC,SAKGA,GAJIA,SCGEG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAG1B,MAAO,CAAE2B,WAAY,KAAxB,SAAgCD,KCE5BE,E,4MACJC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,EAsBtCG,mBAAqB,WAEnB,OADcC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,I,EAIlEC,gCAAkC,WAIhC,OAHmBC,KAAKC,MACH,IAAlB,EAAKb,MAAM1B,KAAc,EAAK+B,uB,4CAKnC,WACE,IAAMS,EAAgBC,KAAKV,qBACrBW,EACgB,IAApBD,KAAKf,MAAM1B,KAAa,EAAIyC,KAAKJ,kCACnC,OACE,eAAC,EAAD,CAAS1C,MAAM,oDAAf,UACE,cAAC,EAAD,CACEoB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiByB,KAAKd,kBAKvBa,EAAgB,EACf,cAAC,EAAD,CACExC,KAAMyC,KAAKf,MAAM1B,KACjBC,QAASwC,KAAKf,MAAMzB,QACpBC,IAAKuC,KAAKf,MAAMxB,IAChBC,MAAOqC,EACPpC,mBAAoBsC,IAGtB,cAAC,EAAD,CAAcnB,QAAQ,gG,GAjEdoB,aAwEHlB,ICzEfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,yBAA2B,6CAA6C,mBAAqB,uCAAuC,sBAAwB,0CAA0C,kBAAoB,sCAAsC,wBAA0B,4CAA4C,qBAAuB,yCAAyC,mBAAqB,yC,kBCA7aD,EAAOC,QAAU,CAAC,yBAA2B,kDAAkD,eAAiB,2C","file":"static/js/main.d1d20307.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {<h1 style={{ color: 'purple' }}> {title}</h1>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <h3>Statistics</h3>\n    <div>\n      <ul className={s.FeedbackContainerLabels}>\n        <li className={s.FeedbackLabelGood} style={{ color: 'green' }}>\n          Good: {good}\n        </li>\n        <li className={s.FeedbackLabelNeutral} style={{ color: 'yellow' }}>\n          Neutral: {neutral}\n        </li>\n        <li className={s.FeedbackLabelBad} style={{ color: 'red' }}>\n          Bad: {bad}\n        </li>\n      </ul>\n      <ul className={s.CountContainerLabels}>\n        <li className={s.CountTotalFeedback}>Total: {total}</li>\n        <li className={s.CountPositiveFeedbackPercentage}>\n          Positive Feedback: {positivePercentage} %\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={s.FeedbackContainerButtons}>\n    {options.map(option => (\n      <button\n        key={option}\n        className={s.FeedbackButton}\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <p style={{ fontWeight: 700 }}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  counterFeedback = feedback => {\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  // counterFeedbackGood = () => {\n  //   this.setState(prevState => ({\n  //     good: prevState.good + 1,\n  //   }));\n  // };\n\n  // counterFeedbackNeutral = () => {\n  //   this.setState(prevState => ({\n  //     neutral: prevState.neutral + 1,\n  //   }));\n  // };\n\n  // counterFeedbackBad = () => {\n  //   this.setState(prevState => ({\n  //     bad: prevState.bad + 1,\n  //   }));\n  // };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce((a, b) => a + b, 0);\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return percentage;\n  };\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage =\n      this.state.good === 0 ? 0 : this.countPositiveFeedbackPercentage();\n    return (\n      <Section title=\" ☕️ Сafe ''Expresso'' ☕️\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.counterFeedback}\n          // counterFeedbackGood={this.counterFeedbackGood}\n          // counterFeedbackNeutral={this.counterFeedbackNeutral}\n          // counterFeedbackBad={this.counterFeedbackBad}\n        />\n        {totalFeedback > 0 ? (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={totalFeedback}\n            positivePercentage={positiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\" 🤷‍♂️ There is no feedback 🤷‍♂️ \" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackContainerButtons\":\"Statistics_FeedbackContainerButtons__1esCl\",\"FeedbackButtonGood\":\"Statistics_FeedbackButtonGood__2twdc\",\"FeedbackButtonNeutral\":\"Statistics_FeedbackButtonNeutral__2gevK\",\"FeedbackButtonBad\":\"Statistics_FeedbackButtonBad__3NPJv\",\"FeedbackContainerLabels\":\"Statistics_FeedbackContainerLabels__2_y85\",\"CountContainerLabels\":\"Statistics_CountContainerLabels__attDf\",\"CountTotalFeedback\":\"Statistics_CountTotalFeedback__12E_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackContainerButtons\":\"FeedbackOptions_FeedbackContainerButtons__10BLI\",\"FeedbackButton\":\"FeedbackOptions_FeedbackButton__i-xi7\"};"],"sourceRoot":""}